{
  "name": "sqlpm",
  "version": "0.0.1",
  "description": "Contains sql package manager (sqlpm) and re-usable database schema.",
  "keywords": [
    "Typescript, SQL, SQL DDL, package manager, database schema, re-usable DDL, SQL Versioning"
  ],
  "author": {
    "name": "Eric Hosick",
    "email": "erichosick@gmail.com",
    "url": "https://github.com/erichosick"
  },
  "contributors": [],
  "license": "SEE LICENSE IN LICENSE.md",
  "private": true,
  "homepage": "https://github.com/erichosick/sqlpm",
  "bugs": {
    "url": "https://github.com/erichosick/sqlpm/issues",
    "email": "erichosick@gmail.com"
  },
  "scripts": {
    "build": "yarn lerna run build",
    "build:watch": "yarn lerna run build:watch",
    "develop": "yarn lerna run develop",
    "test:unit": "yarn build && jest --config=./jest.unit.config.ts",
    "test:unit:watch": "yarn build && jest --config=./jest.unit.config.ts --watch --coverage --verbose",
    "test:unit:watch:no-coverage": "jest --config=./jest.unit.config.ts --watch --verbose",
    "test:integration": "yarn docker:up -d; set -o allexport; source .env; source .env.local; yarn build && jest --config=./jest.integration.config.ts",
    "test:integration:watch": "yarn echo:docker:help; set -o allexport; source .env; source .env.local; yarn build && jest --config=./jest.integration.config.ts --watch --coverage --verbose",
    "test:integration:watch:no-coverage": "yarn echo:docker:help; set -o allexport; source .env; source .env.local; jest --config=./jest.integration.config.ts --watch --verbose",
    "test:postgresql": "set -o allexport; source .env; source .env.local; jest --config=./jest.postgresql.config.ts --verbose",
    "test:postgresql:watch": "set -o allexport; source .env; source .env.local; jest --config=./jest.postgresql.config.ts --watch --verbose",
    "publish:all": "yarn test:integration && yarn build && yarn lerna publish",
    "lerna:create": "yarn lerna create -y",
    "lerna:upgrade:latest": "yarn lerna run upgrade:latest",
    "docker:up": "set -o allexport; source .env; source .env.local; set +o allexport; docker compose -f docker-compose.yml up",
    "docker:down": "set -o allexport; source .env; source .env.local; set +o allexport; docker compose -f docker-compose.yml down",
    "docker:build": "set -o allexport; source .env; source .env.local; set +o allexport; docker compose -f docker-compose.yml build",
    "docker:destroy": "yarn docker:down ; docker rmi $(docker images --filter \"reference=sqlpm*\" -q) -f; docker volume rm sqlpm_sqlpm_testing_db_data",
    "tsc": "echo \"You probably don't want to run tsc at the root of this mono-repo. It creates maps and types for every ts file!\"",
    "sqlpm": "TS_NODE_SKIP_IGNORE=true yarn ts-node --cwd $(pwd) ./packages/sqlpm/src/index.ts",
    "sqlpm2": "yarn ts-node --cwd $(pwd) ./packages/sqlpm/src/index.ts",
    "echo:docker:help": "echo 'NOTE: Be sure to run 'yarn docker:up' before running integration tests.'",
    "upgrade:latest": "yarn upgrade --latest"
  },
  "workspaces": [
    "packages/*",
    "schemas/postgresql/*"
  ],
  "devDependencies": {
    "@jest/fake-timers": "^29.5.0",
    "@types/clone": "^2.1.1",
    "@types/jest": "^29.5.1",
    "@types/jest-expect-message": "^1.1.0",
    "@types/jsdom": "^21.1.1",
    "@types/node": "^20.1.1",
    "@types/uuid": "^9.0.1",
    "@types/webpack": "^5.28.1",
    "@typescript-eslint/eslint-plugin": "^5.59.5",
    "@typescript-eslint/parser": "^5.59.5",
    "eslint": "^8.40.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jest": "^27.2.1",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-expect-message": "^1.1.3",
    "jest-mock": "^29.5.0",
    "jsdom": "^22.0.0",
    "jsdom-worker": "^0.3.0",
    "lerna": "^6.6.2",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.4",
    "uuid": "^9.0.0",
    "webpack": "^5.82.0",
    "webpack-cli": "^5.1.1"
  }
}
